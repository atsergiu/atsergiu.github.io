!function(e){function t(t){for(var i,n,h=t[0],o=t[1],l=t[2],d=0,p=[];d<h.length;d++)n=h[d],Object.prototype.hasOwnProperty.call(a,n)&&a[n]&&p.push(a[n][0]),a[n]=0;for(i in o)Object.prototype.hasOwnProperty.call(o,i)&&(e[i]=o[i]);for(c&&c(t);p.length;)p.shift()();return r.push.apply(r,l||[]),s()}function s(){for(var e,t=0;t<r.length;t++){for(var s=r[t],i=!0,h=1;h<s.length;h++){var o=s[h];0!==a[o]&&(i=!1)}i&&(r.splice(t--,1),e=n(n.s=s[0]))}return e}var i={},a={0:0},r=[];function n(t){if(i[t])return i[t].exports;var s=i[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=i,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="";var h=window.webpackJsonp=window.webpackJsonp||[],o=h.push.bind(h);h.push=t,h=h.slice();for(var l=0;l<h.length;l++)t(h[l]);var c=o;r.push([1,1]),s()}([,function(e,t,s){"use strict";s.r(t);var i=s(0),a=s.n(i),r={addColiider(e,t,s){return this.scene.physics.add.collider(this,e,t,null,s||this),this},bodyPositionDifferenceX:0,prevRay:null,prevHasHit:null,addOverlap(e,t,s){return this.scene.physics.add.overlap(this,e,t,null,s||this),this},raycast(e,t,{raylength:s=30,precision:i=0,steepnes:r=1}){const{x:n,y:h,width:o,halfHeight:l}=e;if(this.bodyPositionDifferenceX+=e.x-e.prev.x,Math.abs(this.bodyPositionDifferenceX)<=i&&null!==this.prevHasHit)return{ray:this.prevRay,hasHit:this.prevHasHit};const c=new a.a.Geom.Line;let d=!1;switch(e.facing){case a.a.Physics.Arcade.FACING_RIGHT:c.x1=n+o,c.y1=h+l,c.x2=c.x1+s*r,c.y2=c.y1+s;break;case a.a.Physics.Arcade.FACING_LEFT:c.x1=n,c.y1=h+l,c.x2=c.x1-s*r,c.y2=c.y1+s}const p=t.getTilesWithinShape(c);return p.length>0&&(d=this.prevHasHit=p.some((e=>-1!==e.index))),this.prevRay=c,this.bodyPositionDifferenceX=0,{ray:c,hasHit:d}}};var n=class{constructor(e,t,s,i=1,r){this.bar=new a.a.GameObjects.Graphics(e),this.bar.setDepth(99),this.x=t/i,this.y=s/i,this.value=r,this.size={width:40,height:10},this.scale=i,this.pixelPerHealth=this.size.width/this.value,e.add.existing(this.bar),this.draw(this.x,this.y,this.scale)}decrease(e){this.value=e<=0?0:e,this.draw(this.x,this.y,this.scale)}draw(e,t,s){this.bar.clear();const{width:i,height:a}=this.size;this.bar.fillStyle(0),this.bar.fillRect(e,t,i+2,a+2),this.bar.fillStyle(16777215),this.bar.fillRect(e+2,t+2,i-2,a-2);const r=Math.floor(this.value*this.pixelPerHealth);return this.pixelPerHealth*this.value<=this.size.width/3?this.bar.fillStyle(16711680):this.bar.fillStyle(65280),r>0&&this.bar.fillRect(e+2,t+2,r-2,a-2),this.bar.setScrollFactor(0).setScale(s)}};class h extends a.a.Physics.Arcade.Sprite{constructor(e,t,s,i,a){super(e,t,s),e.add.existing(this),e.physics.add.existing(this),this.impactPosition=a,this.target=null,this.effectName=i,this.on("animationcomplete",(e=>{e.key===this.effectName&&this.destroy()}),this)}preUpdate(e,t){super.preUpdate(e,t),this.placeEffect()}placeEffect(){if(!this.target||!this.body)return;const e=this.target.getCenter();this.body.reset(e.x,this.impactPosition.y)}playOn(e){this.target=e,this.play(this.effectName,!0),this.placeEffect()}}var o=h;var l=class{constructor(e){this.scene=e}playEffectOn(e,t,s){new o(this.scene,0,0,e,s).playOn(t)}};class c extends a.a.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.add.existing(this),e.physics.add.existing(this),this.speed=300,this.maxDistance=300,this.traveledDistance=0,this.cooldown=500,this.damage=10,this.effectManager=new l(e),this.body.setSize(this.width-13,this.height-20)}preUpdate(e,t){super.preUpdate(e,t),this.traveledDistance+=this.body.deltaAbsX(),this.isOutOfRange()&&(this.body.reset(0,0),this.setActive(!1),this.setVisible(!1),this.traveledDistance=0)}fire(e,t,s){this.setActive(!0),this.setVisible(!0),this.body.reset(e,t),this.setVelocityX(this.speed),s&&this.play(s,!0)}deliversHit(e){this.setActive(!1),this.setVisible(!1);const t={x:this.x,y:this.y};this.body.reset(0,0),this.traveledDistance=0,this.effectManager.playEffectOn("hit-effect",e,t)}isOutOfRange(){return this.traveledDistance&&this.traveledDistance>=this.maxDistance}}var d=c;const p=()=>(new Date).getTime();class y extends a.a.Physics.Arcade.Group{constructor(e,t){super(e.physics.world,e),this.createMultiple({frameQuantity:5,active:!1,visible:!1,key:t,classType:d}),this.timeFromLastAction=null}fireProjectile(e,t){const s=this.getFirstDead(!1);if(!s)return;if(this.timeFromLastAction&&this.timeFromLastAction+s.cooldown>p())return;const i=e.getCenter();let r;e.lastDirection===a.a.Physics.Arcade.FACING_RIGHT?(s.speed=Math.abs(s.speed),s.setFlipX(!1),r=i.x+12):(s.speed=-Math.abs(s.speed),s.setFlipX(!0),r=i.x-12),s.fire(r,i.y,t),this.timeFromLastAction=p()}}var m=y,u={isPlayingAnims(e){return this.anims.isPlaying&&this.anims.getCurrentKey()===e}};class g extends a.a.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.add.existing(this),e.physics.add.existing(this),this.weaponName=i,this.attackSpeed=1e3,this.damage=15,this.weaponAnim=i+"-swing",this.effectManager=new l(e),this.wielder=null,this.setOrigin(.5,1),this.setDepth(10),this.activateWeapon(!1),this.on("animationcomplete",(e=>{e.key===this.weaponAnim&&(this.activateWeapon(!1),this.body.reset(0,0),this.body.checkCollision.none=!1)}))}preUpdate(e,t){super.preUpdate(e,t),this.active&&(this.wielder.lastDirection===a.a.Physics.Arcade.FACING_RIGHT?(this.setFlipX(!1),this.body.reset(this.wielder.x+20,this.wielder.y)):(this.setFlipX(!0),this.body.reset(this.wielder.x-20,this.wielder.y)))}deliversHit(e){const t={x:this.x,y:this.getRightCenter().y};this.body.checkCollision.none=!0,this.effectManager.playEffectOn("hit-effect",e,t)}swing(e){this.wielder=e,this.activateWeapon(!0),this.anims.play(this.weaponAnim,!0)}activateWeapon(e){this.setActive(e),this.setVisible(e)}}var f=g;class b extends a.a.Events.EventEmitter{constructor(){super()}}var v=new b;class w extends a.a.Physics.Arcade.Sprite{constructor(e,t,s){super(e,t,s,"player"),e.add.existing(this),e.physics.add.existing(this),this.init(),this.initEvents(),Object.assign(this,r),Object.assign(this,u)}init(){this.cursors=this.scene.input.keyboard.addKeys({up:"W",left:"A",down:"S",right:"D",space:"SPACE"}),this.gravity=500,this.jumpCount=0,this.consecutiveJumps=1,this.playerSpeed=150,this.health=100,this.isSliding=!1,this.body.setGravityY(500),this.hasBeenHit=!1,this.jumpSound=this.scene.sound.add("jump",{volume:.2}),this.projSound=this.scene.sound.add("proj-atk",{volume:.2}),this.stepSound=this.scene.sound.add("running",{volume:.2}),this.swipeSound=this.scene.sound.add("swipe",{volume:.2}),this.hp=new n(this.scene,this.scene.config.leftTopCorner.x+10,this.scene.config.leftTopCorner.y+10,2,this.health),this.bounceVelocity=180,this.lastDirection=a.a.Physics.Arcade.FACING_RIGHT,this.body.setSize(20,36),this.timeFromLastSwing=null,this.projectiles=new m(this.scene,"iceball"),this.meleeWeapon=new f(this.scene,0,0,"sword-attack"),this.setCollideWorldBounds(!0),this.setOrigin(.5,1),(e=>{e.create({key:"idle",frames:e.generateFrameNumbers("player",{start:0,end:7}),frameRate:6,repeat:-1}),e.create({key:"run",frames:e.generateFrameNumbers("player",{start:11,end:16}),frameRate:6,repeat:-1}),e.create({key:"jump",frames:e.generateFrameNumbers("player",{start:17,end:23}),frameRate:2,repeat:1}),e.create({key:"throw",frames:e.generateFrameNumbers("player-throw",{start:0,end:7}),frameRate:14,repeat:0}),e.create({key:"slides",frames:e.generateFrameNumbers("slide",{start:0,end:3}),frameRate:20,repeat:0})})(this.scene.anims),this.handleAttacks(),this.handleMovements(),this.scene.time.addEvent({delay:300,repeat:-1,callbackScope:this,callback:()=>{this.isPlayingAnims("run")&&this.stepSound.play()}})}handleAttacks(){this.scene.input.keyboard.on("keydown-Q",(()=>{this.projSound.play(),this.play("throw",!0),this.projectiles.fireProjectile(this,"iceball")})),this.scene.input.keyboard.on("keydown-E",(()=>{this.timeFromLastSwing&&this.timeFromLastSwing+this.meleeWeapon.attackSpeed>p()||(this.swipeSound.play(),this.play("throw",!0),this.meleeWeapon.swing(this),this.timeFromLastSwing=p())}))}initEvents(){this.scene.events.on(a.a.Scenes.Events.UPDATE,this.update,this)}update(){if(this.hasBeenHit||this.isSliding||!this.body)return;if(this.getBounds().top>this.scene.config.height+100)return void v.emit("PLAYER_LOOSE");const{left:e,right:t,space:s,down:i}=this.cursors,r=a.a.Input.Keyboard.JustDown(s),n=this.body.onFloor();e.isDown?(this.setVelocityX(-this.playerSpeed),this.setFlipX(!0),this.lastDirection=a.a.Physics.Arcade.FACING_LEFT):t.isDown?(this.setVelocityX(this.playerSpeed),this.setFlipX(!1),this.lastDirection=a.a.Physics.Arcade.FACING_RIGHT):this.setVelocityX(0),r&&(n||this.jumpCount<this.consecutiveJumps)&&(this.setVelocityY(-300),this.jumpCount++,this.jumpSound.play()),n&&(this.jumpCount=0),this.isPlayingAnims("throw")||(n?0!==this.body.velocity.x?this.play("run",!0):this.play("idle",!0):this.play("jump",!0))}playDamageTween(){return this.scene.tweens.add({targets:this,duration:100,repeat:-1,tint:16777215})}handleMovements(){this.scene.input.keyboard.on("keydown-S",(()=>{this.body.onFloor()&&(this.isSliding=!0,this.body.setSize(this.width,this.height/2),this.setOffset(0,this.height/2),this.setVelocityX(0),this.play("slides",!0))})),this.scene.input.keyboard.on("keyup-S",(()=>{this.body.setSize(this.width,38),this.setOffset(0,0),this.isSliding=!1}))}takesHit(e){if(this.hasBeenHit)return;if(this.health-=e.damage||e.properties.damage||0,this.health<=0)return void v.emit("PLAYER_LOOSE");this.hasBeenHit=!0,this.bounceOff(e),this.hp.decrease(this.health);const t=this.playDamageTween();e.deliversHit&&e.deliversHit(this),this.scene.time.delayedCall(500,(()=>{this.hasBeenHit=!1,t.stop(),this.clearTint()}))}bounceOff(e){e.body?this.body.touching.right?this.setVelocityX(-this.bounceVelocity):this.setVelocity(this.bounceVelocity):this.body.blocked.right?this.setVelocityX(-this.bounceVelocity):this.setVelocity(this.bounceVelocity),setTimeout((()=>this.setVelocityY(-this.bounceVelocity)),0)}}var k=w;class S extends a.a.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.add.existing(this),e.physics.add.existing(this),this.init(),this.initEvents(),Object.assign(this,r),Object.assign(this,u)}initEvents(){this.scene.events.on(a.a.Scenes.Events.UPDATE,this.update,this)}init(){this.gravity=500,this.speed=100,this.timeFromLestTurn=0,this.maxPatrolDistance=3e3,this.currentPatrolDistance=0,this.platformCollidersLayer=null,this.health=30,this.rayGraphics=this.scene.add.graphics({lineStyle:{width:2,color:11141290}}),this.body.setGravityY(500),this.setCollideWorldBounds(!0),this.setImmovable(!0),this.setOrigin(.5,1),this.setVelocityX(this.speed),this.damage=20}update(e,t){if(this.patrol(e,t),this.getBounds().bottom>600)return this.scene.events.removeListener(a.a.Scenes.Events.UPDATE,this.update,this),this.rayGraphics.clear(),this.setActive(!1),void this.destroy()}patrol(e,t){if(!this.body||!this.body.onFloor())return;this.currentPatrolDistance+=Math.abs(this.body.deltaX());const{ray:s,hasHit:i}=this.raycast(this.body,this.platformCollidersLayer,{raylenght:30,precision:2,steepnes:.5});(!i||this.currentPatrolDistance>=this.maxPatrolDistance)&&this.timeFromLestTurn+100<e&&(this.setFlipX(!this.flipX),this.setVelocityX(this.speed=-this.speed),this.timeFromLestTurn=e,this.currentPatrolDistance=0)}takesHit(e){this.health-=e.damage,e.deliversHit(this),this.health<=0&&(this.setTint(16711680),this.setVelocity(0,-200),this.body.checkCollision.none=!0,this.setCollideWorldBounds(!1))}setPlatformColliders(e){this.platformCollidersLayer=e}}var x=S;var P=class extends x{constructor(e,t,s){super(e,t,s,"birdman"),(e=>{e.create({key:"birdidle",frames:e.generateFrameNumbers("birdman",{start:0,end:12}),frameRate:8,repeat:-1}),e.create({key:"birdhurt",frames:e.generateFrameNumbers("birdman",{start:25,end:26}),frameRate:6,repeat:0})})(e.anims),this.setSize(20,45),this.setOffset(7,20)}update(e,t){super.update(e,t),this.active&&(this.isPlayingAnims("birdhurt")||this.play("birdidle",!0))}takesHit(e){super.takesHit(e),this.play("birdhurt",!0)}};const _={Birdman:P,Snaky:class extends x{constructor(e,t,s){super(e,t,s,"snaky"),(e=>{e.create({key:"snakyidle",frames:e.generateFrameNumbers("snaky",{start:0,end:8}),frameRate:8,repeat:-1}),e.create({key:"snakyhurt",frames:e.generateFrameNumbers("snaky",{start:21,end:22}),frameRate:6,repeat:0})})(e.anims),this.scene=e}init(){super.init(),this.speed=50,this.setSize(12,45),this.setOffset(10,15),this.projectiles=new m(this.scene,"fireball-1"),this.timeFromLastAttack=0,this.attackDelay=this.getAttackDelay(),this.lastDirection=null}getAttackDelay(){return Phaser.Math.Between(1e3,4e3)}update(e,t){this.active&&(this.body.velocity.x>0?this.lastDirection=Phaser.Physics.Arcade.FACING_RIGHT:this.lastDirection=Phaser.Physics.Arcade.FACING_left,this.timeFromLastAttack+this.attackDelay<=e&&(this.projectiles.fireProjectile(this,"fireball"),this.timeFromLastAttack=e,this.attackDelay=this.getAttackDelay()),super.update(e,t),this.active&&(this.isPlayingAnims("snakyhurt")||this.play("snakyidle",!0)))}takesHit(e){super.takesHit(e),this.play("snakyhurt",!0)}}};class O extends a.a.GameObjects.Group{constructor(e){super(e),Object.assign(this,r)}getProjectiles(){const e=new a.a.GameObjects.Group;return this.getChildren().forEach((t=>{t.projectiles&&e.addMultiple(t.projectiles.getChildren())})),e}getTypes(){return _}}var C=O;class A extends a.a.Physics.Arcade.Sprite{constructor(e,t,s,i){super(e,t,s,i),e.add.existing(this),this.setDepth(10),this.score=1,this.setOrigin(0,1),e.tweens.add({targets:this,y:this.y-3,duration:a.a.Math.Between(1500,2500),repeat:-1,easy:"linear",yoyo:!0})}}var j=A;class E extends a.a.Physics.Arcade.StaticGroup{constructor(e){super(e.physics.world,e),this.createFromConfig({classType:j})}mapProperties(e){return e&&0!==e.length?e.reduce(((e,t)=>(e[t.name]=t.value,e)),{}):{}}addCollectables(e){const{score:t,type:s}=this.mapProperties(e.properties);e.objects.forEach((e=>{const i=this.get(e.x,e.y,s),a=this.mapProperties(e.properties);i.score=a.score||t}))}}var F=E;class L extends a.a.GameObjects.Container{constructor(e,t,s){super(e,t,s),e.add.existing(this);const{rightTopCorner:i}=e.config;this.containerWidth=70,this.setPosition(i.x-this.containerWidth,i.y+10),this.setScrollFactor(0),this.setDepth(99),this.setupList()}setupList(){this.scoreBoard=this.createScoreboard(),this.add([this.scoreBoard]);let e=0;this.list.forEach((t=>{t.setPosition(t.x,t.y+e),e+=20}))}createScoreboard(){const e=this.scene.add.text(0,0,"0",{fontSize:"20px",fill:"#fff"}),t=this.scene.add.image(e.width+5,0,"diamond").setOrigin(0).setScale(2),s=this.scene.add.container(0,0,[e,t]);return s.setName("scoreBoard"),s}updateScoreboard(e){const[t,s]=this.getByName("scoreBoard").list;t.setText(e),s.setX(t.width+5)}}var D=L;class H extends a.a.Scene{constructor(e){super("PlayScene"),this.config=e}create({gameStatus:e}){(e=>{e.create({key:"hit-effect",frames:e.generateFrameNumbers("hit-sheet",{start:0,end:4}),frameRate:10,repeat:0}),e.create({key:"sword-attack-swing",frames:e.generateFrameNumbers("sword-attack",{start:0,end:3}),frameRate:10,repeat:0}),e.create({key:"fireball",frames:[{key:"fireball-1"},{key:"fireball-2"},{key:"fireball-3"}],frameRate:3,repeat:0}),e.create({key:"iceball",frames:[{key:"iceball-1"},{key:"iceball-2"}],frameRate:2,repeat:0}),e.create({key:"diamond-anim",frames:[{key:"diamond-1"},{key:"diamond-2"},{key:"diamond-3"},{key:"diamond-4"},{key:"diamond-5"},{key:"diamond-6"}],frameRate:8,repeat:-1})})(this.anims),this.score=0,this.playBgMusic();const t=this.createMap(),s=this.createLayers(t),i=this.getPlayerZones(s.playerZones),a=this.createPlayer(i),r=this.createEnemies(s.enemyZones,s.collidable),n=this.createCollectables(s.collectables);this.hud=new D(this,0,0),this.createBackButton(),this.createPlayerColliders(a,{colliders:{collidable:s.collidable,projectiles:r.getProjectiles(),collectables:n,traps:s.traps}}),this.createEnemyColiders(r,{colliders:{collidable:s.collidable,player:a}}),this.collectSound=this.sound.add("coin-pickup",{volume:.2}),this.createEndOfLevel(i.end,a),this.setupFollowupCameraOn(a),"PLAYER_LOOSE"!==e&&this.createGameEvents()}createGameEvents(){v.on("PLAYER_LOOSE",(()=>{this.theme.stop(),this.scene.restart({gameStatus:"PLAYER_LOOSE"}),console.log("hel")}))}playBgMusic(){this.theme=this.sound.add("theme",{loop:!0,volume:.1}),this.theme.play()}createMap(){const e=this.make.tilemap({key:"map"+this.getCurrentLevel()});e.addTilesetImage("main_lev_build_1","tiles-1"),e.addTilesetImage("bg_spikes_tileset","bg-spikes-tileset"),e.addTilesetImage("main_lev_build_2","tiles-2");return e}createLayers(e){const t=e.getTileset("main_lev_build_1"),s=e.getTileset("bg_spikes_tileset");this.createBG(e);e.createStaticLayer("distance",s).setDepth(-12);const i=e.createStaticLayer("collidable",t).setAlpha(0),a=e.createStaticLayer("enviroment",t).setDepth(-2),r=e.createStaticLayer("platforms",t),n=e.getObjectLayer("player_zones"),h=e.getObjectLayer("enemy_zones"),o=e.getObjectLayer("collectables"),l=e.createStaticLayer("traps",t);return i.setCollisionByProperty({collides:!0}),l.setCollisionByExclusion(-1),{enviroment:a,platforms:r,collidable:i,playerZones:n,enemyZones:h,collectables:o,traps:l}}createBG(e){const t=e.getObjectLayer("distanceBg").objects[0];this.spikeImg=this.add.tileSprite(t.x,t.y,this.config.width,t.height,"bg-spikes-dark").setOrigin(0,1).setDepth(-10).setScrollFactor(0,1),this.skyImg=this.add.tileSprite(0,0,this.config.width,180,"bg-sky").setOrigin(0,0).setDepth(-11).setScrollFactor(0,1)}createEnemies(e,t){const s=new C(this),i=s.getTypes();return e.objects.map((e=>{const a=new i[e.type](this,e.x,e.y);a.setPlatformColliders(t),s.add(a)})),s}onPlayerCollision(e,t){t.takesHit(e)}createEnemyColiders(e,{colliders:t}){e.addColiider(t.collidable),e.addColiider(t.player,this.onPlayerCollision),e.addColiider(t.player.projectiles,this.onHit),e.addOverlap(t.player.meleeWeapon,this.onHit)}createCollectables(e){const t=new F(this).setDepth(-1);return t.addCollectables(e),t.playAnimation("diamond-anim"),t}onCollect(e,t){this.collectSound.play(),this.score+=t.score,this.hud.updateScoreboard(this.score),t.disableBody(!0,!0)}createPlayer({start:e}){return new k(this,e.x,e.y)}onHit(e,t){e.takesHit(t)}createPlayerColliders(e,{colliders:t}){e.addColiider(t.collidable),e.addColiider(t.projectiles,this.onHit),e.addColiider(t.traps,this.onHit),e.addOverlap(t.collectables,this.onCollect,this)}createBackButton(){this.add.image(this.config.rightBottomCorner.x,this.config.rightBottomCorner.y,"back").setScrollFactor(0).setScale(2).setInteractive().setOrigin(1).on("pointerup",(()=>{this.theme.stop(),this.scene.start("MenuScene")}))}setupFollowupCameraOn(e){const{height:t,width:s,mapOffset:i}=this.config;this.physics.world.setBounds(0,0,s+i,t+200),this.cameras.main.setBounds(0,0,s+i,t+200).setZoom(1.25),this.cameras.main.startFollow(e)}getPlayerZones(e){const t=e.objects;return{start:t.find((e=>"startZone"===e.name)),end:t.find((e=>"endZone"===e.name))}}getCurrentLevel(){return this.registry.get("level")||1}createEndOfLevel(e,t){const s=this.physics.add.sprite(e.x,e.y,"end").setAlpha(0).setSize(5,2*this.config.height),i=this.physics.add.overlap(t,s,(()=>{i.active=!1,this.registry.inc("level",1),3==this.getCurrentLevel()&&this.registry.set("level",1),this.theme.stop(),this.scene.restart({gameStatus:"LEVEL_COMPLETED"})}))}update(){this.spikeImg.tilePositionX=.3*this.cameras.main.scrollX,this.skyImg.tilePositionX=.1*this.cameras.main.scrollX}}var T=H;class G extends a.a.Scene{constructor(e,t){super(e),this.config=t,this.screenCenter=[this.config.width/2,this.config.height/2],this.fontSize=65,this.lineHeight=70,this.fontOptions={fontSize:this.fontSize+"px",fill:"#fff",stroke:"#000000",strokeThickness:3}}create(){if(this.add.image(0,0,"menu-bg").setOrigin(0).setScale(5),this.config.canGoBack){this.add.image(this.config.width-10,this.config.height-10,"back").setScale(3).setOrigin(1).setInteractive().on("pointerdown",(()=>{this.scene.start("MenuScene")}))}}createMenu(e,t){let s=0;e.forEach((e=>{const i=[this.screenCenter[0],this.screenCenter[1]+s];e.textGO=this.add.text(...i,e.text,this.fontOptions).setOrigin(.5,1),s+=this.lineHeight,t(e)}))}}var B=G;var M=class extends B{constructor(e){super("MenuScene",e),this.menu=[{scene:"PlayScene",text:"Play"},{scene:"LevelScene",text:"Levels"}]}create(){super.create(),this.createMenu(this.menu,this.setupMenuEvents.bind(this))}setupMenuEvents(e){const t=e.textGO;t.setInteractive(),t.on("pointerover",(()=>{t.setStyle({fill:"#ff0"})})),t.on("pointerout",(()=>{t.setStyle({fill:"#fff"})})),t.on("pointerup",(()=>{e.scene&&this.scene.start(e.scene),"Exit"==e.text&&this.game.destroy(!0)}))}};class R extends a.a.Scene{constructor(){super("PreloadScene")}preload(){this.load.tilemapTiledJSON("map1","assets/map1.json"),this.load.tilemapTiledJSON("map2","assets/map2.json"),this.load.image("tiles-1","assets/main_lev_build_1.png"),this.load.image("tiles-2","assets/main_lev_build_2.png"),this.load.image("bg-spikes-dark","assets/bg_dark.png"),this.load.image("bg-sky","assets/bg_0.png"),this.load.image("menu-bg","assets/bg_0.png"),this.load.image("back","assets/back.png"),this.load.image("bg-spikes-tileset","assets/bg_spikes_tileset.png"),this.load.image("diamond","assets/collectibles/diamond.png"),this.load.image("diamond-1","assets/collectibles/diamond_big_01.png"),this.load.image("diamond-2","assets/collectibles/diamond_big_02.png"),this.load.image("diamond-3","assets/collectibles/diamond_big_03.png"),this.load.image("diamond-4","assets/collectibles/diamond_big_04.png"),this.load.image("diamond-5","assets/collectibles/diamond_big_05.png"),this.load.image("diamond-6","assets/collectibles/diamond_big_06.png"),this.load.image("iceball-1","assets/weapons/iceball_001.png"),this.load.image("iceball-2","assets/weapons/iceball_002.png"),this.load.spritesheet("player","assets/player/move_sprite_1.png",{frameWidth:32,frameHeight:38,spacing:32}),this.load.spritesheet("slide","assets/player/slide_sheet_2.png",{frameWidth:32,frameHeight:38,spacing:32}),this.load.spritesheet("birdman","assets/enemy/enemy_sheet.png",{frameWidth:32,frameHeight:64,spacing:32}),this.load.spritesheet("snaky","assets/enemy/enemy_sheet_2.png",{frameWidth:32,frameHeight:64,spacing:32}),this.load.spritesheet("player-throw","assets/player/throw_attack_sheet_1.png",{frameWidth:32,frameHeight:38,spacing:32}),this.load.spritesheet("hit-sheet","assets/weapons/hit_effect_sheet.png",{frameWidth:32,frameHeight:32}),this.load.spritesheet("sword-attack","assets/weapons/sword_sheet_1.png",{frameWidth:52,frameHeight:32,spacing:16}),this.load.image("fireball-1","assets/weapons/improved_fireball_001.png"),this.load.image("fireball-2","assets/weapons/improved_fireball_002.png"),this.load.image("fireball-3","assets/weapons/improved_fireball_003.png"),this.load.audio("theme","assets/music/theme_music.wav"),this.load.audio("running","assets/music/step_mud.wav"),this.load.audio("jump","assets/music/jump.wav"),this.load.audio("swipe","assets/music/swipe.wav"),this.load.audio("proj-atk","assets/music/projectile_launch.wav"),this.load.audio("coin-pickup","assets/music/coin_pickup.wav"),this.load.once("complete",(()=>{this.registry.set("level",1),this.registry.set("unlocked-levels",2),this.scene.start("MenuScene")}))}}var I=R;var N=class extends B{constructor(e){super("LevelScene",{...e,canGoBack:!0})}create(){super.create(),this.menu=[];const e=this.registry.get("unlocked-levels");for(let t=1;t<=e;t++)this.menu.push({scene:"PlayScene",text:"Level "+t,level:t});this.createMenu(this.menu,this.setupMenuEvents.bind(this))}setupMenuEvents(e){const t=e.textGO;t.setInteractive(),t.on("pointerover",(()=>{t.setStyle({fill:"#ff0"})})),t.on("pointerout",(()=>{t.setStyle({fill:"#fff"})})),t.on("pointerup",(()=>{e.scene&&(this.registry.set("level",e.level),this.scene.start(e.scene)),"Exit"==e.text&&this.game.destroy(!0)}))}};const X=document.body.offsetWidth,V=600,W=1.25,z={mapOffset:1600>X?1600-X:0,width:X,height:V,zoomFactor:W,leftTopCorner:{x:(X-X/W)/2,y:60},rightTopCorner:{x:X/W+(X-X/W)/2,y:60},rightBottomCorner:{x:X/W+(X-X/W)/2,y:540}},U=[I,M,N,T],Y={type:a.a.AUTO,...z,parent:"my-game",physics:{default:"arcade",arcade:{debug:!1}},scene:U.map((e=>new e(z)))};new a.a.Game(Y)}]);